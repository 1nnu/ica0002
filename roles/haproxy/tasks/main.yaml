- name: Install HAproxy
  ansible.builtin.apt:
    name: haproxy

- name: Copy haproxy conf file
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  notify: Restart haproxy

- name: Start and enable haproxy
  ansible.builtin.service:
    name: haproxy
    state: started
    enabled: true

- name: Install haproxy exporter
  ansible.builtin.apt:
    name: prometheus-haproxy-exporter

- name: Copy haproxy exporter conf file
  ansible.builtin.template:
    src: prometheus-haproxy-exporter.j2
    dest: /etc/default/prometheus-haproxy-exporter
  notify: Restart haproxy-exporter

- name: Start and enable haproxy-exporter
  ansible.builtin.service:
    name: prometheus-haproxy-exporter
    state: started
    enabled: true

- name: Gather facts for the first dns_primary host
  ansible.builtin.setup:
  delegate_to: "{{ groups['dns_primary'][0] }}"
  register: dns_primary_facts
  no_log: true

- name: Set server_ip variable to the IP of the first dns_primary host
  ansible.builtin.set_fact:
    primary_dns_server_ip: "{{ dns_primary_facts.ansible_facts.ansible_default_ipv4.address }}"
  no_log: true


- name: Add haproxy CNAME records
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ dns_nsupdate_key }}"
    key_algorithm: "hmac-sha256"
    zone: "{{ domain }}"
    server: "{{ primary_dns_server_ip }}"
    record: "lb-{{ inventory_hostname[-1] if groups['web_servers']|length - 1 else None }}"
    value: "{{ inventory_hostname }}"
    type: "CNAME"
  delegate_to: "{{ groups['dns_primary'][0] }}"
  no_log: true