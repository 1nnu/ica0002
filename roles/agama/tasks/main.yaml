- name: Create directory for agama user
  ansible.builtin.file:
    path: /opt/agama
    state: directory

- name: Download agama dockerfile
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/hudolejev/agama/master/{{ item }}
    dest: /opt/agama
  loop:
    - agama.py
    - Dockerfile

- name: Build agama image
  community.docker.docker_image:
    name: agama
    source: build
    build:
      path: /opt/agama

- name: Get container info
  community.docker.docker_host_info:
    containers: yes
    containers_filters:
      name: "agama"
  register: status

- name: Start agama containers
  community.docker.docker_container:
    image: agama
    name: "{{ item.key }}"
    published_ports: "{{ item.value }}:8000"
    env:
      AGAMA_DATABASE_URI: mysql+pymysql://{{ mysql_user }}:{{ mysql_password }}@{{ mysql_host }}/{{ mysql_database }}
    restart_policy: unless-stopped
  no_log: true
  loop: "{{ agama_docker_containers | dict2items}}"

- name: Remove unnecessary agama containers
  community.docker.docker_container:
    name: "{{ item['Names'][0] }}"
    container_default_behavior: "no_defaults"
    state: absent
  loop: "{{ status.containers }}"
  when: item['Names'][0][1:] not in agama_docker_containers .keys()|list

- name: Gather facts for the first dns_primary host
  ansible.builtin.setup:
  delegate_to: "{{ groups['dns_primary'][0] }}"
  register: dns_primary_facts
  no_log: true

- name: Set server_ip variable to the IP of the first dns_primary host
  ansible.builtin.set_fact:
    primary_dns_server_ip: "{{ dns_primary_facts.ansible_facts.ansible_default_ipv4.address }}"
  no_log: true

- name: Add agama CNAME records
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_secret: "{{ dns_nsupdate_key }}"
    key_algorithm: "hmac-sha256"
    zone: "{{ domain }}"
    server: "{{ primary_dns_server_ip }}"
    record: "www-{{ inventory_hostname[-1] if groups['web_servers']|length - 1 else None }}"
    value: "{{ inventory_hostname }}"
    type: "CNAME"
  no_log: true
